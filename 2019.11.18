#리눅스 커널
* 커널이랑 os의 코어가 되는 부분을 말한다. 메모리 관리, 파일 시스템, 프로세스 관리, 디바이스 제어의 역할을 한다. 
안드로이드 또한 리눅스 커널을 기반으로 만들어졌다. 

각 쉘들의 특징
bash : 명령이나 파일명의 자동온성 기능등을 제공
csh : BSD계열 OS에서 주로 사용
zsh  : bash와 호환성이 좋고 고속으로 동작한다. 

파일 시스템
리눅스 커널은 가상 파일 시스템을 사용한다. 
사용자의 입장에서 각 데이터가 저장되어 있는 위치와 상관없이 그냥 파일처럼 사용할 수 있도록 하는 것이다. 

디렉토리 구성
/bin : ls, cp같은 기본 커맨드를 저장하는 디렉토리
/boot : os시작에 필요한 파일을 저장한다. 
/dev : 하드디스크, 키보드, 디바이스 파일을 저장하는 디렉토리
/etc : os나 애플리케이션의 설정 파일을 저장하는 디렉토리
 /usr : 각종 프로그램이나 커널 소스를 저장하는 디렉토리
 /var : 시스템 기동과 함께 변하는 파일을 저장하는 디렉토리

 ## 미들웨어 :  미드루에어는 os와 비즈니스를 처리하는 애플리케이션 사이에 들어가는 각종 소프트웨어를 말한다. 
 웹서버, DBMS, 시스템 모니터링 툴 등이 있다. 

 Apache Http server : 폭 넓게 사용되는 전통의 오픈소스 웹 서버
 Nginx : 소비 메모리가 적으며 리버스 프록시와 로드밸런서 기능을 갖추고 있는 오픈소스 웹 서버

 * 시스템 모니터링 
 네트워크, 서버, 클라우드, 애플리케이션, 서비스, 트랜잭션 등 다양한 레벨에서 모니터링을 하면서 이상 여부를 확인하고 원일을 분석합니다. 
 zabbix : zabbix sia가 개발한 오픈 소스 모니터링 툴
 datadog : 서버를 도입할 필요 없이 웹 브라우저에서 모니터링 가능 멀티 클라우드 환경에서도 손쉽게 모니터링이 가능

* 인프라 구성 관리
* 네트워크, 하드웨어, 미들웨어, 애플리케이션 등 구성정보를 관리하고 적절한 상태로 유지하는 작업

* Infrastructure as Code
    * 서버를 새로 설치할 때에 100대를 수작업으로 설정한다면 매우 힘들다.
    그래서 이것을 프로그램 코드를 기반으로 관리하는 것이 좋다. 이렇게 코드 기반으로 구성을 관리하는 것을 Infrastructue as Code라고 한다.

* Bootstrapping : os시작을 자동화
    * 서버 OS설치, 가상 환경 설정, 네트워크 구성 설정등
* configuration : 미들웨어의 설정을 자동화
    * os설정, 각종 미들웨어 설치 및 설정
    * Ansible, Chef, Puppet
* Orchestraion :  여러 서버 관리를 자동화
    * Kubernetes : 컨테이너 오케스트레이션의 사실 상 표준, 줄여서 K8s라고도 부름


 
