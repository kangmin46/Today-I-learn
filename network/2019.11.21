- 멀티 프로그래밍 : CPU 활용도를 극대화 하는 알고리즘
- Wait : 간단히 저장매체로부터 파일 읽기를 기다리는 시간으로 가정

[](https://www.notion.so/c2c8a84d6c894c6990fdcf2dda08be3b#6c949bf7af8e4fd39ff1debf73ba0d80)

- running state : 현재 CPU에서 실행 상태
- ready state : CPU에서 실행 가능 상태(실행 대기 상태)
- block state : 특정 이벤트 발생 대기 상태(wait 상태 ex) 저장매체에서 파일을 읽는동안 기다리는 상태 )
    - 해당 파일읽기가 만약 끝나면 해당 프로세스에게 신호(인터럽트)를 준다.

[](https://www.notion.so/c2c8a84d6c894c6990fdcf2dda08be3b#734519a976c14639b8525dc4524d4c9c)


- 선점형 스케쥴러
    - 하나의 프로세스가 다른 프로세스 대신에 프로세서(CPU)를 차지할 수 있음
    - 프로세스 running 중에 스케쥴러가 이를 중단시키고, 다른 프로세스로 교체 가능
- 비선점형 스케쥴러
    - 하나의 프로세스가 끝나지 않으면 다른 프로세스는 CPU를 사용할 수 없음
    - 프로세스가 자발적으로 blocking 상태로 들어가거나, 실행이 끝났을 때에만, 다른 프로세스로 교체 가능

[](https://www.notion.so/bf56028b071f4b298d2abed7dc226720#9fd25cfb22564f84844c0c8ef1a7ae2e)

- 요즘 나오는 운영체제들은 다 선점형 스케쥴러이다.