docker pull dockercloud/haproxy

- 도커 허브에 있는 것을 pull 땡겨온다.

    docker build -t node-server . 

- t : tag  내가 빌드한 이미지에 이름을 붙이는 옵션
- .은 디렉토리 내에 있는 도커파일을 찾아서 알아서 빌드해줌
- 도커 컨테이너는 명령어 하나만 수행하게 되어있다. 그래서 일반적으로 특정명령어 하나만 수행하게 만든다
- 예를들어 자바 .jar파일을 실행한다던가...
- 그리고 이 명령이 끝나면 container는 stop이 된다.
- 도커파일은 이미지를 어떻게 구성할 것인지.
- 도커 컴포즈 파일은 이미지를 실행하는 데 필요한 옵션들을 눈에 알아보기 쉽게 재사용할 수 있게 파일형식으로 나타낸 것
    - 예를들면 같은 이미지에 환경변수를 다르게 준다던가, local의 포트번호를 다르게 한다던가, 어떤 이미지를 기반으로 다른 프로그램을 깔아서 한다던가.. 그리고 이미지를 여러개 동시에 한다던가..
- 443  포트 번호는   TLS

    docker-compose ps

- 이거는 내가 docker-compose 명령어를 실행하면 현재디렉토리 안에 있는 docker-compose파일을 실행하게 된다.  docker 명령어로도 컨테이너를 띄울 수 있다.

    docker-compose exec web echo Hello

- 이거는 내가 docker-compose 명령어로 띄운 컨테이너에 어떤 명령어를 보내는 방법이다. 저기서 web은 별명으로 docker-compose.yml에 기술되어 있다.

    docker-compose exec web /bin/bash

- 를 실행해서 직접 들어가서 조작할 수도 있다.

    docker-compose stop web

- 이렇게 끌 수도있다.

* 애플리케이션 엔지니어도 인프라 엔지니어의 업무였던 환경에 대한 배포나 테스트 등을 직접 할 수 있게 되면서, 인프라 관련 기초 지식이 필요하게 되었습니다. 
* 인프라의 구성요소
    1. 하드웨어 : 서버 장비 본체나 데이터 등을 저장하기 위한 장치
    2. 네트워크 : 사용자가 원격으로 제어할 수 있는 도구
    3. 운영체제 : 하드웨어나 네트워크 장비를 제어하기 위한 소프트웨어
    4. 미들웨어 : 서버상에서 서버가 특정 기능을 하도록 제공하는 소프트웨어이다. 

* 온프레미스 : 데이터 센터나 서버실에 서버를 두고 서버를 운영하는 방식, 이런 환경에서는 서버, 네트워크 장비, OS, 스토리지등을 직접 사서 설치하고 관리해야 한다. 
* 퍼블릭 클라우드 : 인터넷을 통해 불특정 다수에게 제공되는 시스템이다. AWS, GCP 등 프로바이더가 데이터 센터와 인프라를 보유하고 있다. 제공하는 서비스에 따라 IAAS, PAAS, Saas등으로 나눌 수 있다. 
이 중 IAAS 는 원하는 사양에 따라 가상머신이나 스토리지를 선택하고, 이용한 시간이나 데이터 양에 따라 비용을 지불한다. 
* 프라비잇 클라우드 : 퍼블릭 클라우드에서 이용자의 수를 제한한 것을 말한다. 
* 클라우드가 유리한 경우 : 대외 서비스의 경우 트래픽을 예상하기 쉽지 않습니다. 트래픽 양에 따라 서버의 사양이나 네트워크 대역을 지정하는 것을 사이징이라고 하는 데, 크게 잡으면 비용이 많이 나가고 적게 잡으면 
단기간에 증설되기가 어렵다. 
* 클라우드 는 트래픽에 따라서 서버의 사이즈를 조절 해 주는 오토스케일링이 있어서 유리하다. 
