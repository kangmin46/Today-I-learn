## 인터럽트

- 인터럽트 : CPU가 프로그램을 실행하고 있을 때에, 입출력 하드웨어등의 장치나 또는 예외상황이 발생하여 처리가 필요할 경우에 CPU에 알리는 기술
    - 이벤트 발생 → 처리 (Kernel Code) 가 이루어지도록 이벤트가 발생하면 신호를 보내는 기술
    - 선점형 스케쥴러에서 반드시 필요한 기술이다. 왜냐하면 CPU가 Running중인 것을 중간에 끊어야 하기 때문에
- 인터럽트가 발생을 스케쥴러에 알려주든, 프로세스에 알려주든 그것은 운영체제 구현마다 다르다.
- ex)  입출력 하드웨어 등의 장치 이슈 발생
    - 파일처리가 끝났다는 것을 운영체제에 알려준다.
    - 운영체제는 해당 프로세스를 block state에서 ready 상태로 프로세스 상태 변경한다.
- 예외상황 발생
    - 0으로 나누는 계산이 발생해서, 예외 발생을 운영체제에 알려주기
    - 운영체제가 해당 프로세스 중지
- 0으로 나누는 연산은 컴파일 에러가 아니라 CPU 에 올라가서 실행하는  Runtime error가 난다.
- 타이머 인터럽트 : 타이머 인터럽트를 발생시키는 칩이 컴퓨터 안에 존재한다.

    [](https://www.notion.so/269a25d231bc41199b03cb5e953cbf8a#8fbe1eaddbc54c94aecd792a01bf1fac)

인터럽트 종류

- 내부 인터럽트
    - 주로 프로그램 내부에서 잘못된 명령 또는 잘못된 데이터 사용시 발생
        - ex)
        - 0으로 나눴을 때
        - 사용자 모드에서 허용되지 않은 명령 또는 공간 접근시
        - 계산 결과가 Overflow/Underflow  날 때
- 외부 인터럽트
    - 주로 하드웨어에서 발생되는 이벤트
        - 전원이상
        - 기계 문제
        - 키보드 등 IO 관련 이벤트
        - Timer 이벤트
- 하나의 프로세스는 기본적으로 4GB까지의 공간을 가진다.
    - 그런데 0~3GB까지는 사용자모드가 접근할 수 있는 모드이다.
    - 커널 모드는 0~4 까지 모두 접근 가능하다.

- 시스템 콜 인터럽트
    - 시스템 콜 실행을 위해서는 강제로 코드에 인터럽트 명령을 넣어, CPU 에게 실행시켜야 한다.
    - 시스템 콜 실제코드
        - eax 레지스터에 시스템 콜 번호를 넣고
        - ebx 레지스터에는 시스템 콜에 해당하는 인자값을 넣고
        - 소프트웨어 인터럽트 명령을 호출하면서 0x80 값을 넘겨준다.
- 인터럽트와 시스템 콜
    - 시스템 콜 인터럽트 명령을 호출하면서 0x80값을 넘겨준다.
        1. CPU는 사용자 모드를 커널 모드로 바꿔준다. 
        2. IDT에서 0x80에 해당하는 주소(함수)를 찾아서 실행한다. 
        3. system_call()  함수에서 eax로부터 시스템 콜 번호를 찾아서, 해당 번호에 맞는 시스템콜 함수로 이동
        4. 해당 시스템콜 함수 실행 후, 다시 커널 모드에서 사용자 모드로 변경하고, 다시 해당 프로세스 다음 코드 진행
- 프로세스를 바꿔서 다른 프로세스를 실행시키는 스케쥴링, Timer interrupt를 처리하는 곳도 커널 모드에서 처리를 한다.

[](https://www.notion.so/269a25d231bc41199b03cb5e953cbf8a#8e4ec7957ed344c1b9609497bdbaadb1)

- 인터럽트와 IDT
    - 인터럽트는 미리 정의되어 각각 번호와 실행 코드를 가리키는 주소가 기록되어 있다.
        - 어디에? IDT 에 기록
        - 언제? 컴퓨터 부팅 시 운영체제가 기록
        - 어떤 코드? 운영체제 내부 코드
    - 다시 예를 들면
        - 인터럽트 발생시 IDT를 확인
        - 시스템 콜 인터럽트 명령은 번호가 미리 정의
        - IDT 에는 0x80 → system_call()와 같은 정보가 기록되어 있다.

- 리눅스의 예
    - 0~31 : 예외상황 인터럽트
    - 32~47 : 하드웨어 인터럽트
    - 128 : 시스템 콜

- 인터럽트와 프로세스
    1. 프로세스 실행 중 인터럽트 발생
    2. 프로세스 실행 중단
    3. 인터럽트 처리 함수 실행(운영체제)
    4. 프로세스 재 실행

- 인터럽트와 스케쥴러
    - 수시로 타이머 인터럽트가 발생
        - ex) 운영체제가 타이머 인터럽트 발생 횟수를 기억해서 5번 타이머 인터럽트가 발생하면, 현재 프로세스를 다른 프로세스로 바꿔준다.

[](https://www.notion.so/269a25d231bc41199b03cb5e953cbf8a#f93da660ce384707b4e7fcfde318ac51)