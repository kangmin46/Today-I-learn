## 프로세스와 컨텍스트 스위칭

- Stack 은 함수를 위한 데이터 공간
- 함수가 실행되면 제일 먼저 EBP 라는 레지스터에 스택포인터의 맨 꼭대기 주소가 저장되어 있는 데,  stack 에 들어가 있고, 함수가 실행되면 함수가 실행된 리턴 주소가 스택에 두번째로 저장이 된다.
- EBP 라는 레지스터의 존재이유 : 함수안에서 함수를 부르고 꼬리에 꼬리를 물고 함수를 실행하는 구조가 되게 되면 중간에 에러가 났을 때에 어디서 문제가 생겼는 지 모른다. 그런데 EBP가 있으면, 지금 현재 실행중인 함수에 대한 정보를 가지고 있기 때문에 어디서 에러가 났는 지 알 수 있다.
- 함수의 반환값은 EAX  에 들어간다.

- 그래서 함수가 호출되면 현재 스택포인터의 최상단을 EBP에 저장한다.
- 프로세스는 일반적으로 어떻게 구성되어 있을까?
    - text (CODE) : 코그
    - data : 변수/초기화된 데이터
    - stack : 임시 데이터(함수 호출, 로컬 변수등)
    - heap: 코드에서 동적으로 만들어지는 데이터

- Data영역은 두가지로 나누어진다.
    1.  BSS : 초기화되지 않은 전역 변수
    2. DATA :  초기화 된 전역 변수